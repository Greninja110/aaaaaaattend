# Generated by Django 4.2.10 on 2025-03-25 20:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LabAssistant',
            fields=[
                ('assistant_id', models.AutoField(primary_key=True, serialize=False)),
                ('dob', models.DateField(blank=True, null=True)),
                ('joining_year', models.IntegerField(default=2023)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lab_assistant',
            },
        ),
        migrations.CreateModel(
            name='ScheduledReport',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('report_type', models.CharField(choices=[('attendance', 'Attendance'), ('leave', 'Leave'), ('lab_usage', 'Lab Usage'), ('low_attendance', 'Low Attendance')], max_length=50)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField()),
                ('format', models.CharField(choices=[('pdf', 'PDF'), ('csv', 'CSV'), ('excel', 'Excel')], default='pdf', max_length=10)),
                ('recipients', models.TextField()),
                ('filters', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab_assistant_portal.labassistant')),
            ],
        ),
        migrations.CreateModel(
            name='LabIssue',
            fields=[
                ('issue_id', models.AutoField(primary_key=True, serialize=False)),
                ('lab_name', models.CharField(max_length=100)),
                ('issue_type', models.CharField(choices=[('hardware', 'Hardware Issue'), ('software', 'Software Issue'), ('network', 'Network Issue'), ('environment', 'Environmental Issue'), ('other', 'Other Issue')], max_length=50)),
                ('description', models.TextField()),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('resolved', 'Resolved')], default='open', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_issues', to='lab_assistant_portal.labassistant')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_issues', to='lab_assistant_portal.labassistant')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceException',
            fields=[
                ('exception_id', models.AutoField(primary_key=True, serialize=False)),
                ('reason', models.TextField()),
                ('previous_status', models.CharField(max_length=20)),
                ('requested_status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('dont_care', "Don't Care")], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.attendance')),
                ('lab_assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab_assistant_portal.labassistant')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_requests', to='core.faculty')),
            ],
            options={
                'db_table': 'attendance_exception',
            },
        ),
    ]
