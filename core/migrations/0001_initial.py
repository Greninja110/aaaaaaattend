# Generated by Django 4.2.10 on 2025-03-25 20:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('academic_year_id', models.AutoField(primary_key=True, serialize=False)),
                ('year_start', models.IntegerField()),
                ('year_end', models.IntegerField()),
                ('is_current', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'academic_years',
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_name', models.CharField(max_length=1, unique=True)),
            ],
            options={
                'db_table': 'batches',
            },
        ),
        migrations.CreateModel(
            name='ClassSection',
            fields=[
                ('class_section_id', models.AutoField(primary_key=True, serialize=False)),
                ('section_name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'class_sections',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100)),
                ('department_code', models.CharField(max_length=10, unique=True)),
                ('hod_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.AutoField(primary_key=True, serialize=False)),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('joining_year', models.IntegerField(default=2023)),
                ('designation', models.CharField(default='Assistant Professor', max_length=100)),
                ('weekly_hours_limit', models.IntegerField(default=40)),
                ('current_weekly_hours', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_leave', 'On Leave')], default='active', max_length=20)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'faculty',
            },
        ),
        migrations.CreateModel(
            name='FacultySubject',
            fields=[
                ('faculty_subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_lab', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicyear')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.batch')),
                ('class_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.classsection')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.faculty')),
            ],
            options={
                'db_table': 'faculty_subject',
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('timetable_id', models.AutoField(primary_key=True, serialize=False)),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room_number', models.CharField(max_length=20)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.academicyear')),
                ('faculty_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.facultysubject')),
            ],
            options={
                'db_table': 'timetable',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'system_logs',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('subject_id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_code', models.CharField(max_length=20, unique=True)),
                ('subject_name', models.CharField(max_length=100)),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('credits', models.IntegerField()),
                ('has_theory', models.BooleanField(default=True)),
                ('has_lab', models.BooleanField(default=False)),
                ('is_elective', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.department')),
            ],
            options={
                'db_table': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('roll_number', models.CharField(max_length=20, unique=True)),
                ('admission_year', models.IntegerField(default=2023)),
                ('dob', models.DateField(blank=True, null=True)),
                ('current_semester', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('section', models.CharField(blank=True, max_length=5, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('graduated', 'Graduated'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.batch')),
                ('class_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.classsection')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'students',
            },
        ),
        migrations.CreateModel(
            name='LeaveApplication',
            fields=[
                ('leave_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('document_path', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('faculty_approved', 'Faculty Approved'), ('lab_approved', 'Lab Assistant Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('lab_assistant_approval', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('faculty_approval', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='faculty_approvals', to='core.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
            options={
                'db_table': 'leave_application',
            },
        ),
        migrations.AddField(
            model_name='facultysubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject'),
        ),
        migrations.CreateModel(
            name='ElectiveSubject',
            fields=[
                ('elective_id', models.AutoField(primary_key=True, serialize=False)),
                ('elective_group', models.CharField(max_length=50)),
                ('semester', models.IntegerField(validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(8)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.subject')),
            ],
            options={
                'db_table': 'elective_subjects',
            },
        ),
        migrations.AddField(
            model_name='classsection',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('attendance_id', models.AutoField(primary_key=True, serialize=False)),
                ('attendance_date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('dont_care', "Don't Care")], max_length=20)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('is_substitution', models.BooleanField(default=False)),
                ('substitution_id', models.IntegerField(blank=True, null=True)),
                ('faculty_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.facultysubject')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.student')),
            ],
            options={
                'db_table': 'attendance',
            },
        ),
        migrations.AddConstraint(
            model_name='timetable',
            constraint=models.UniqueConstraint(fields=('room_number', 'start_time', 'day_of_week', 'academic_year'), name='unique_room_time_day'),
        ),
        migrations.AddConstraint(
            model_name='timetable',
            constraint=models.UniqueConstraint(fields=('faculty_subject', 'start_time', 'day_of_week', 'academic_year'), name='unique_faculty_time_day'),
        ),
        migrations.AddConstraint(
            model_name='facultysubject',
            constraint=models.UniqueConstraint(fields=('faculty', 'subject', 'class_section', 'batch', 'academic_year', 'is_lab'), name='unique_faculty_subject_class_batch_year'),
        ),
        migrations.AddConstraint(
            model_name='electivesubject',
            constraint=models.UniqueConstraint(fields=('subject',), name='unique_subject_elective'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('student', 'faculty_subject', 'attendance_date')},
        ),
    ]
